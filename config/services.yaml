# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    content.file: "%kernel.project_dir%/Resources/index.yml"
    allowed_origin: "%env(ALLOWED_ORIGIN)%"
    mongodb_dsn: "%env(MONGODB_DSN)%"
    mongodb_database: "%env(MONGODB_DATABASE)%"
    redis_host: "%env(REDIS_HOST)%"
    redis_pass: "%env(REDIS_PASS)%"
    redis_port: "%env(REDIS_PORT)%"
    debril.rss_atom.provider.class: 'App\Storage\Provider\ItemProvider'
    ws_url: "%env(WS_URL)%"

services:
    # default configuration for services in *this* file
    _defaults:
        bind:
            $allowedOrigin: '%allowed_origin%'
            $host: '%ws_url%'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Content:
        arguments: ["%content.file%"]

    App\Storage\Repository\FeedRepository:
        alias: repository.feed

    App\Storage\Repository\ItemRepository:
        alias: repository.item

    App\Storage\Repository\TopicRepository:
        alias: repository.topic

    App\Storage\Repository\ResultRepository:
        alias: repository.result

    GuzzleHttp\Client:
        alias: guzzle.client

    MongoDB\Database:
        alias: mongo.database

    repository.feed:
        class: App\Storage\Repository\FeedRepository

    repository.item:
        class: App\Storage\Repository\ItemRepository

    repository.topic:
        class: App\Storage\Repository\TopicRepository

    repository.result:
        class: App\Storage\Repository\ResultRepository

    mongo.client:
        class: MongoDB\Client
        arguments: ["%mongodb_dsn%"]

    handler.item:
        class: App\Handler\NewItemHandler
        arguments: ["@guzzle.client", "%ws_url%"]

    mongo.database:
        class: MongoDB\Database
        factory: ['@mongo.client', 'selectDatabase']
        arguments: ["%mongodb_database%"]

    Redis:
        class: \Redis
        calls:
            - method: connect
              arguments: ["%redis_host%", "%redis_port%"]
            - method: auth
              arguments: ["%redis_pass%"]
